/**
 * generated by Xtext 2.24.0
 */
package org.xtext.svjd.videoMontageSVJD.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.svjd.videoMontageSVJD.Font;
import org.xtext.svjd.videoMontageSVJD.FontStyle;
import org.xtext.svjd.videoMontageSVJD.VideoMontageSVJDPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Font</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.svjd.videoMontageSVJD.impl.FontImpl#getFontStyle <em>Font Style</em>}</li>
 *   <li>{@link org.xtext.svjd.videoMontageSVJD.impl.FontImpl#getLength <em>Length</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FontImpl extends MinimalEObjectImpl.Container implements Font
{
  /**
   * The default value of the '{@link #getFontStyle() <em>Font Style</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFontStyle()
   * @generated
   * @ordered
   */
  protected static final FontStyle FONT_STYLE_EDEFAULT = FontStyle.COMIC_SANS_MS;

  /**
   * The cached value of the '{@link #getFontStyle() <em>Font Style</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFontStyle()
   * @generated
   * @ordered
   */
  protected FontStyle fontStyle = FONT_STYLE_EDEFAULT;

  /**
   * The default value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected static final String LENGTH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected String length = LENGTH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FontImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VideoMontageSVJDPackage.Literals.FONT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FontStyle getFontStyle()
  {
    return fontStyle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFontStyle(FontStyle newFontStyle)
  {
    FontStyle oldFontStyle = fontStyle;
    fontStyle = newFontStyle == null ? FONT_STYLE_EDEFAULT : newFontStyle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.FONT__FONT_STYLE, oldFontStyle, fontStyle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLength()
  {
    return length;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLength(String newLength)
  {
    String oldLength = length;
    length = newLength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.FONT__LENGTH, oldLength, length));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.FONT__FONT_STYLE:
        return getFontStyle();
      case VideoMontageSVJDPackage.FONT__LENGTH:
        return getLength();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.FONT__FONT_STYLE:
        setFontStyle((FontStyle)newValue);
        return;
      case VideoMontageSVJDPackage.FONT__LENGTH:
        setLength((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.FONT__FONT_STYLE:
        setFontStyle(FONT_STYLE_EDEFAULT);
        return;
      case VideoMontageSVJDPackage.FONT__LENGTH:
        setLength(LENGTH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.FONT__FONT_STYLE:
        return fontStyle != FONT_STYLE_EDEFAULT;
      case VideoMontageSVJDPackage.FONT__LENGTH:
        return LENGTH_EDEFAULT == null ? length != null : !LENGTH_EDEFAULT.equals(length);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (fontStyle: ");
    result.append(fontStyle);
    result.append(", length: ");
    result.append(length);
    result.append(')');
    return result.toString();
  }

} //FontImpl
