/**
 * generated by Xtext 2.24.0
 */
package org.xtext.svjd.videoMontageSVJD.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.svjd.videoMontageSVJD.Color;
import org.xtext.svjd.videoMontageSVJD.TextArea;
import org.xtext.svjd.videoMontageSVJD.Title;
import org.xtext.svjd.videoMontageSVJD.VideoMontageSVJDPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Title</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.svjd.videoMontageSVJD.impl.TitleImpl#getDuration <em>Duration</em>}</li>
 *   <li>{@link org.xtext.svjd.videoMontageSVJD.impl.TitleImpl#getBackgroundColor <em>Background Color</em>}</li>
 *   <li>{@link org.xtext.svjd.videoMontageSVJD.impl.TitleImpl#getTextarea <em>Textarea</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TitleImpl extends VideoElementImpl implements Title
{
  /**
   * The default value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected static final double DURATION_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected double duration = DURATION_EDEFAULT;

  /**
   * The default value of the '{@link #getBackgroundColor() <em>Background Color</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBackgroundColor()
   * @generated
   * @ordered
   */
  protected static final Color BACKGROUND_COLOR_EDEFAULT = Color.BLACK;

  /**
   * The cached value of the '{@link #getBackgroundColor() <em>Background Color</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBackgroundColor()
   * @generated
   * @ordered
   */
  protected Color backgroundColor = BACKGROUND_COLOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getTextarea() <em>Textarea</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTextarea()
   * @generated
   * @ordered
   */
  protected TextArea textarea;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TitleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VideoMontageSVJDPackage.Literals.TITLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(double newDuration)
  {
    double oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.TITLE__DURATION, oldDuration, duration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Color getBackgroundColor()
  {
    return backgroundColor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBackgroundColor(Color newBackgroundColor)
  {
    Color oldBackgroundColor = backgroundColor;
    backgroundColor = newBackgroundColor == null ? BACKGROUND_COLOR_EDEFAULT : newBackgroundColor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.TITLE__BACKGROUND_COLOR, oldBackgroundColor, backgroundColor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TextArea getTextarea()
  {
    return textarea;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTextarea(TextArea newTextarea, NotificationChain msgs)
  {
    TextArea oldTextarea = textarea;
    textarea = newTextarea;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.TITLE__TEXTAREA, oldTextarea, newTextarea);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTextarea(TextArea newTextarea)
  {
    if (newTextarea != textarea)
    {
      NotificationChain msgs = null;
      if (textarea != null)
        msgs = ((InternalEObject)textarea).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - VideoMontageSVJDPackage.TITLE__TEXTAREA, null, msgs);
      if (newTextarea != null)
        msgs = ((InternalEObject)newTextarea).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - VideoMontageSVJDPackage.TITLE__TEXTAREA, null, msgs);
      msgs = basicSetTextarea(newTextarea, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VideoMontageSVJDPackage.TITLE__TEXTAREA, newTextarea, newTextarea));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.TITLE__TEXTAREA:
        return basicSetTextarea(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.TITLE__DURATION:
        return getDuration();
      case VideoMontageSVJDPackage.TITLE__BACKGROUND_COLOR:
        return getBackgroundColor();
      case VideoMontageSVJDPackage.TITLE__TEXTAREA:
        return getTextarea();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.TITLE__DURATION:
        setDuration((Double)newValue);
        return;
      case VideoMontageSVJDPackage.TITLE__BACKGROUND_COLOR:
        setBackgroundColor((Color)newValue);
        return;
      case VideoMontageSVJDPackage.TITLE__TEXTAREA:
        setTextarea((TextArea)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.TITLE__DURATION:
        setDuration(DURATION_EDEFAULT);
        return;
      case VideoMontageSVJDPackage.TITLE__BACKGROUND_COLOR:
        setBackgroundColor(BACKGROUND_COLOR_EDEFAULT);
        return;
      case VideoMontageSVJDPackage.TITLE__TEXTAREA:
        setTextarea((TextArea)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VideoMontageSVJDPackage.TITLE__DURATION:
        return duration != DURATION_EDEFAULT;
      case VideoMontageSVJDPackage.TITLE__BACKGROUND_COLOR:
        return backgroundColor != BACKGROUND_COLOR_EDEFAULT;
      case VideoMontageSVJDPackage.TITLE__TEXTAREA:
        return textarea != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (duration: ");
    result.append(duration);
    result.append(", backgroundColor: ");
    result.append(backgroundColor);
    result.append(')');
    return result.toString();
  }

} //TitleImpl
